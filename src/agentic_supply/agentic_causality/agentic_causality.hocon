{
    # Optional metadata describing this agent network
    "metadata": {
        "description": "Simple agent network using a CodedTool and sly_data"
        "tags": ["example"],
    },
    "llm_config": {
        "model_name": "azure-gpt-4o", # "azure-gpt-4.1",
        "openai_api_version": "2025-01-01-preview",# "2024-12-01-preview",
        "azure_endpoint": "https://belfiusoai1.openai.azure.com/",
        "deployment_name": "gpt-4o"
    },
    "commondefs": {
        "replacement_strings": {
            "aaosa_instructions": """
When you receive an inquiry, you will:

    1. Call your tools to determine which down-chain agents in your tools are
       responsible for all or part of it.
    2. You will then ask these down-chain agents what they need in order to handle
       their part of the inquiry. Once the requirements are gathered, you will,
    3. Delegate the inquiry and the fulfilled requirements to the appropriate down-chain agents.
    4. Once all down-chain agents respond, you will compile their responses and return the final response.

You may, in turn, be called by other agents in the system and have to act as a down-chain to them.
            """
        },
        "replacement_values": {
            "aaosa_call": {
                "description": "Depending on the mode, returns a natural language string in response.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "inquiry": {
                            "type": "string",
                            "description": "The inquiry"
                        },
                        "mode": {
                            "type": "string",
                            "description": """
indicates whether the agent is being asked to determine if the inquiry belongs to it
in its entirety or in part. or if it is being asked to provide requirements to fulfill
the inquiry, if any. or if it is being asked to respond to the inquiry.
                            """
                        },
                    },
                    "required": [
                        "inquiry",
                        "mode"
                    ]
                }
            },
            "aaosa_command": "Explain if you can respond to all or parts of the inquiry and what you need in order to respond, if anything."
        },
    },
    "tools": [
        # This first agent definition is regarded as the "Front Man", which
        # does all the talking to the outside world/client.
        #
        # Some disqualifications from being a front man:
        #   1) Cannot use a CodedTool "class" definition
        #   2) Cannot use a Tool "toolbox" definition
        #
        # Besides the first agent being the front man, these tool definitions
        # do not have to be in any particular order. How they are linked and
        # call each other is defined within their own specs.
        # This could be a graph, potentially even with cycles.
        {
            "name": "agentic_causality",
            "function": {

                # The description acts as an initial prompt.
                "description": """
                I am an agent network that can create causal graphs and enable downloading data from a range of datasets.
                Choose your dataset of interest, and prompt me to create a causal graph or to download data and I will generate and share the graph or enable you to download the data.
                """,
            },

            "instructions": """
            You are an agent network that helps users to perform causality analysis on the following datasets :
            - example_data
            - supply_chain_medical
            - supply_chain_logistics

            First, you must prompt the user to tell you the dataset they wish to select for the duration of the whole chat.
            Once the user selects one, ask the data_agent to store the dataset name in memory and ensure that you have confirmation.

            Only once the dataset name has been selected and preserved by the data__agent, you may prompt the user to choose among your available tasks :
            - download the data (this will open a download window, and upon completion will open the file in excel).
            - generate a causal graph for the data (this will save an HTML file and open it in a webbrowser tab).
            - refute the causal graph (this will generate a text report and open a visual assessment in a webbrowser tab).
            - fit and evaluate a causal model for the data (under construction !)

            Always describe to the user what was done based on the information returned by your agents and tools.
            Always ensure the requested tasks was correctly performed without any errors : you can trust your agents' responses to assess this.
            The only input required from the user should be the data_name, once at the start of the chat ; all others are generated and preserved are generated by your agents.
            
            {aaosa_instructions}
            """,
            "allow": {
                "from_downstream": {
                    # Specifying this allows sly_data keys to be ingested from downstream agents
                    # as sly_data for this agent network
                    "sly_data": ["causal_graph_form", "data_name", "evaluation"]
                },
                "to_upstream": {
                    # Specifying this allows sly_data keys from this network to be passed back
                    # to the calling client
                    "sly_data": ["causal_graph_form", "data_name", "evaluation"]
                },
                "to_downstream": {
                    # Specifying this allows specific sly_data
                    # keys from this agent network to be sent
                    # to downstream agent networks
                    "sly_data": ["causal_graph_form", "data_name", "evaluation"]
                }
            },
            "command": "aaosa_command",
            "tools": ["data_agent",  "causality_agent"]
        },
        # AGENTS
        {
            "name": "data_agent",
            "function": "aaosa_call",
            "instructions": """
            You are responsible for preserving the user's original data choice in memory for all agents to access.
            Your additional tasks include :
            - downloading the raw data for the user 
            - visualising the raw data.

            {aaosa_instructions}
            """,
            "command": "aaosa_command",
            "tools": ["data_storer", "data_downloader"]
        },
        {
            "name": "causality_agent",
            "function": "aaosa_call",
            "instructions": """
            You are a coordinator of agents that can perform several tasks within the causality analysis framework DoWhy.
            
            The tasks that your agents can do are :
            1. Modeling causal relations in a causal graph
                1.A - Generating a causal graph
                1.B - Refuting a causal graph
            2. Modeling graphical causal models

            {aaosa_instructions}
            """,
            "command": "aaosa_command",
            "tools": ["causal_graph_agent"]
        },
        # SUB-AGENTS : causal_graph_agent
        {
            "name": "causal_graph_agent",
            "function": "aaosa_call",
            "instructions": """
            You are responsible for generating and refuting causal graphs.
            You do not need any inputs, you can be certain that all required inputs are available in-memory.
            
            You can perform the following tasks :
            1.A - Generating a causal graph
            1.B - Refuting a causal graph


            {aaosa_instructions}
            """,
            "command": "aaosa_command",
            "tools": ["causal_graph_generator", "causal_graph_refutator"]
        },
        # CODED TOOLS : data_agent
        {
            "name": "data_storer",
            "function": {
                "description": "Stores the given data_name in memory, for all other agents and tools to refer to during the remainer of the chat.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "data_name": {
                            "type": "string",
                            "description": "The name of the data to store and persist."
                        }
                    },
                    "required": ["data_name"]
                }
            },
            "class": "data_tools.DataStorer"
        },
        {
            "name": "data_downloader",
            "function": {
                "description": "Downloads the data. Opens the file in an excel window. Returns the filepath in which the data was downloaded, or warns of cancellation otherwise.",
            },
            "class": "data_tools.DataDownloader"
        },
        # CODED TOOLS : causal_graph_agent
        {
            "name": "causal_graph_generator",
            "function": {
                "description": "Generates the causal graph. Opens the visualisation in a new tab, and returns the paths to the graph data.",
            },
            "class": "causal_graph_tools.CausalGraphGenerator"
        },
        {
            "name": "causal_graph_refutator",
            "function": {
                "description": "Refutates the causal graph. Opens the visualisation in a new tab, and returns the refutation/falsification summary.",
            },
            "class": "causal_graph_tools.CausalGraphRefutator"
        },

       
        
        {
            "name": "model_fitter_evaluator",
            "function": {
                "description": "Fits and evaluate a causal model for data_name. The user must have priorly generated the graph by the graph_generator (saved in sly_data).",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "data_name": {
                            "type": "string",
                            "description": "The name of the data for which to fit and evaluate the causal model. Opens a tab with evaluation results."
                        }
                    },
                    "required": ["data_name"]
                }
            },
            "class": "model_fitter_evaluator.ModelFitterEvaluator"
        },
    ]
}